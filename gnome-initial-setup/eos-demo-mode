#!/usr/bin/env python3
# eos-demo-mode - enter demo mode and configure settings
# Copyright (C) 2016-2018 Endless Mobile, Ltd.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import argparse
import os
import subprocess

from gi.repository import GLib, Gio

GDM_DAEMON_CONF = '/etc/gdm3/daemon.conf'


def force_automatic_login_for_gdm(user):
    keyfile = GLib.KeyFile.new()
    keyfile.load_from_file(GDM_DAEMON_CONF, GLib.KeyFileFlags.NONE)
    keyfile.set_boolean('daemon', 'AutomaticLoginEnable', True)
    keyfile.set_string('daemon', 'AutomaticLogin', user)
    keyfile.set_boolean('daemon', 'ForceAutomaticLogin', True)
    keyfile.save_to_file(GDM_DAEMON_CONF)

    # Now get a GDBus connection to systemd and reload the
    # gdm unit so that our changes don't require a reboot
    # to apply
    bus = Gio.bus_get_sync(Gio.BusType.SYSTEM, None)
    bus.call_sync('org.freedesktop.systemd1',
                  '/org/freedesktop/systemd1',
                  'org.freedesktop.systemd1.Manager',
                  'ReloadUnit',
                  GLib.Variant('(ss)', ('gdm.service', 'replace')),
                  None,
                  Gio.DBusCallFlags.NONE,
                  -1,
                  None)


def enter_test_mode():
    """Enter test mode.

    All filesystem changes past this point are now ephemeral.
    """
    test_mode_script = os.path.join(os.path.dirname(__file__), "eos-test-mode")
    subprocess.check_call([test_mode_script])


def transient_setup():
    """Adjust GSettings and icon grids."""
    transient_setup_script = os.path.join(os.path.dirname(__file__),
                                          "eos-transient-setup")
    subprocess.check_call([transient_setup_script, "--mode", "demo"])


def touch_stamp_file(username):
    """Touch a stamp file indicating that we're in demo mode."""
    with open("/run/gnome-initial-setup/eos-demo-mode", "w") as f:
        f.write(username)


def main():
    parser = argparse.ArgumentParser('Set up forced automatic login for demo user')
    parser.add_argument('user',
                        help='The username to set up forced automatic login for')
    result = parser.parse_args()

    enter_test_mode()
    transient_setup()
    force_automatic_login_for_gdm(result.user)
    touch_stamp_file(result.user)


if __name__ == '__main__':
    main()
